[compare] Command to run:
./8-huffman_tree_0
su student_jail -c 'timeout 30 bash -c ./8-huffman_tree_0'
[compare] Return code: 0
[compare] Student stdout:
   .--($/151)---------.
(e/68)          .--($/83)---------------------.
             (o/32)               .--------($/51)---------.
                            .--($/23)---.           .--($/28)--------.
                         (t/11)      (b/12)      (o/12)        .--($/16)--------.
                                                             (r/6)        .--($/10)-------.
                                                                        (l/5)        .--($/5)--.
                                                                                   (n/1)     (H/4)
[compare] Student stdout length: 573
[compare] Student stderr:
[compare] Student stderr length: 0
[valgrind_error] Command to run:
valgrind ./8-huffman_tree_0
su student_jail -c 'timeout 10 bash -c '"'"'valgrind ./8-huffman_tree_0'"'"''
[valgrind_error] Return code: 0
[valgrind_error] Student stdout:
   .--($/151)---------.
(e/68)          .--($/83)---------------------.
             (o/32)               .--------($/51)---------.
                            .--($/23)---.           .--($/28)--------.
                         (t/11)      (b/12)      (o/12)        .--($/16)--------.
                                                             (r/6)        .--($/10)-------.
                                                                        (l/5)        .--($/5)--.
                                                                                   (n/1)     (H/4)
[valgrind_error] Student stdout length: 573
[valgrind_error] Student stderr:
==66== Memcheck, a memory error detector
==66== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==66== Command: ./8-huffman_tree_0
==66==
==66==
==66== HEAP SUMMARY:
==66==     in use at exit: 56 bytes in 2 blocks
==66==   total heap usage: 228 allocs, 226 frees, 10,240 bytes allocated
==66==
==66== LEAK SUMMARY:
==66==    definitely lost: 24 bytes in 1 blocks
==66==    indirectly lost: 32 bytes in 1 blocks
==66==      possibly lost: 0 bytes in 0 blocks
==66==    still reachable: 0 bytes in 0 blocks
==66==         suppressed: 0 bytes in 0 blocks
==66== Rerun with --leak-check=full to see details of leaked memory
==66==
==66== For lists of detected and suppressed errors, rerun with: -s
==66== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[valgrind_error] Student stderr length: 858
[valgrind_leak] Command to run:
valgrind ./8-huffman_tree_0
su student_jail -c 'timeout 10 bash -c '"'"'valgrind ./8-huffman_tree_0'"'"''
[valgrind_leak] Return code: 0
[valgrind_leak] Student stdout:
   .--($/151)---------.
(e/68)          .--($/83)---------------------.
             (o/32)               .--------($/51)---------.
                            .--($/23)---.           .--($/28)--------.
                         (t/11)      (b/12)      (o/12)        .--($/16)--------.
                                                             (r/6)        .--($/10)-------.
                                                                        (l/5)        .--($/5)--.
                                                                                   (n/1)     (H/4)
[valgrind_leak] Student stdout length: 573
[valgrind_leak] Student stderr:
==70== Memcheck, a memory error detector
==70== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==70== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==70== Command: ./8-huffman_tree_0
==70==
==70==
==70== HEAP SUMMARY:
==70==     in use at exit: 56 bytes in 2 blocks
==70==   total heap usage: 228 allocs, 226 frees, 10,240 bytes allocated
==70==
==70== LEAK SUMMARY:
==70==    definitely lost: 24 bytes in 1 blocks
==70==    indirectly lost: 32 bytes in 1 blocks
==70==      possibly lost: 0 bytes in 0 blocks
==70==    still reachable: 0 bytes in 0 blocks
==70==         suppressed: 0 bytes in 0 blocks
==70== Rerun with --leak-check=full to see details of leaked memory
==70==
==70== For lists of detected and suppressed errors, rerun with: -s
==70== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[valgrind_leak] Student stderr length: 858
